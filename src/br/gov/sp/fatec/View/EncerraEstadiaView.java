/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.gov.sp.fatec.View;

import br.gov.sp.fatec.Control.CadastroControl;
import br.gov.sp.fatec.Control.EstadiaControl;
import br.gov.sp.fatec.Model.Cadastro;
import br.gov.sp.fatec.Model.Hospede;
import br.gov.sp.fatec.ServicosTecnicos.Messages;
import java.io.File;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alexandre
 */
public class EncerraEstadiaView extends javax.swing.JInternalFrame {

    private DefaultTableModel model;
    private Hospede cliente;
    private static EncerraEstadiaView window;

    /**
     * Creates new form TestTable
     */

    public static EncerraEstadiaView getInstance() {
        if (window != null) {
            window.dispose();
            window = null;
        }
        window = new EncerraEstadiaView();
        return window;
    }

    public EncerraEstadiaView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtCpf = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        lblInfo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbEstadia = new javax.swing.JTable();
        btnConfirma = new javax.swing.JButton();

        setClosable(true);
        setTitle("Encerramento de Estadia");
        setToolTipText("");
        setFrameIcon(new ImageIcon(System.getProperty("user.dir") + File.separator +
            "images" + File.separator + "LogoSimple.png"));

    try {
        txtCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
    } catch (java.text.ParseException ex) {
        ex.printStackTrace();
    }
    txtCpf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
    txtCpf.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
    txtCpf.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            txtCpfMouseClicked(evt);
        }
    });
    txtCpf.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
        public void propertyChange(java.beans.PropertyChangeEvent evt) {
            txtCpfPropertyChange(evt);
        }
    });

    jLabel1.setText("Cpf do Hóspede: ");

    lblInfo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informações do Hóspede", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("sansserif", 0, 12))); // NOI18N

    tbEstadia.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "Código Locação", "Quarto", "Situação de Conta", "Seleção"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Boolean.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, true
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            if (tbEstadia.getValueAt(rowIndex, 2).equals("Conta(s) Pendente(s)"))
            return false;
            return canEdit [columnIndex];
        }
    });
    jScrollPane1.setViewportView(tbEstadia);

    btnConfirma.setText("Confirmar");
    btnConfirma.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnConfirmaActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(lblInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
        .addComponent(btnConfirma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(layout.createSequentialGroup()
            .addGap(233, 233, 233)
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1)
                .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(lblInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(btnConfirma))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void togglePanes(boolean state) {
        tbEstadia.setVisible(state);
        btnConfirma.setEnabled(state);
    }

    private void txtCpfMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCpfMouseClicked
        txtCpf.setText("");
        txtCpf.setValue(null);
        togglePanes(false);
        lblInfo.setText("");
    }//GEN-LAST:event_txtCpfMouseClicked

    private void txtCpfPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtCpfPropertyChange
        if (txtCpf.getText().contains(" ")) {
            return;
        }
        CadastroControl control = new CadastroControl();
        cliente = control.verificaHospede(new Hospede(txtCpf.getText()));
        if (cliente == null) {
            Messages.showInformation("Hóspede não cadastrado!");
            txtCpf.setText("");
            return;
        }       
        List<Cadastro> temp = control.listarLocacao(txtCpf.getText());
        if (temp.isEmpty()) {
            Messages.showInformation("Não há locação vinculada a este cpf.");
            txtCpf.setText("");            
            return;
        }
        lblInfo.setText(cliente.toString());

        preencheEstadia();
        togglePanes(true);
    }//GEN-LAST:event_txtCpfPropertyChange

    private void btnConfirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmaActionPerformed
        EstadiaControl control = new EstadiaControl();
        boolean selected = false;
        
        for (int i = 0; i < tbEstadia.getRowCount(); i++) {
            if (tbEstadia.getValueAt(i, 3) != null && (boolean)tbEstadia.getValueAt(i, 3) == true) {
                control.encerrar((int) tbEstadia.getValueAt(i, 0), (int)tbEstadia.getValueAt(i, 1));
                selected = true;
            }
        }
        if(selected) {
            Messages.showInformation("Estadia encerrada com sucesso!");
            preencheEstadia();
        } else
            Messages.showError("Selecione ao menos uma locação!");        
    }//GEN-LAST:event_btnConfirmaActionPerformed

    private void preencheEstadia() {
        model = (DefaultTableModel) tbEstadia.getModel();
        model.getDataVector().clear();
        model.fireTableDataChanged();
        CadastroControl controlcad = new CadastroControl();
        model.setRowCount(0);
        String conta;

        for (Cadastro cadastro : controlcad.listarLocacao(txtCpf.getText())) {
            
            int id = cadastro.getId();
            if (controlcad.verificaConsumo(id) && controlcad.verificaDiaria(id) && controlcad.verificaServico(id)) {
                conta = "Conta(s) Quitada(s)";
            } else {
                conta = "Conta(s) Pendente(s)";  
            }
            
            model.addRow(new Object[]{
                    cadastro.getId(),
                    cadastro.getNumQuarto(),
                    conta
                }); 
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirma;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblInfo;
    private javax.swing.JTable tbEstadia;
    private javax.swing.JFormattedTextField txtCpf;
    // End of variables declaration//GEN-END:variables
}
