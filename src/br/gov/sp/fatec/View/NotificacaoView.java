/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.gov.sp.fatec.View;

import br.gov.sp.fatec.Control.NotificacaoControl;
import br.gov.sp.fatec.Model.Diarias;
import br.gov.sp.fatec.ServicosTecnicos.Messages;
import java.awt.event.MouseEvent;
import java.util.Vector;
import javax.swing.JComponent;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Thiago
 */
public class NotificacaoView extends javax.swing.JInternalFrame {
    private static DefaultTableModel model;
    /**
     * Creates new form NotificacaoView
     */
    public NotificacaoView() {
        initComponents();
        JComponent north = ((BasicInternalFrameUI)getUI()).getNorthPane();
        north.remove(0);
        ((BasicInternalFrameUI)getUI()).setSouthPane(north);
        setLocation(0, -295);
        setVisible(true);
        north.removeMouseMotionListener(north.getMouseMotionListeners()[0]);
        north.removeMouseListener(north.getMouseListeners()[0]);
        north.addMouseListener(new java.awt.event.MouseListener() {
            @Override
            public void mouseClicked(MouseEvent me) {
                formMouseClicked(null);
            }

            @Override
            public void mousePressed(MouseEvent me) {}

            @Override
            public void mouseReleased(MouseEvent me) {}

            @Override
            public void mouseEntered(MouseEvent me) {}

            @Override
            public void mouseExited(MouseEvent me) {}
        });
        preencherTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbNotificacoes = new javax.swing.JTable();

        setTitle("Notificações");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
        });

        tbNotificacoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod Locação", "Ultima atualização", "Total R$"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.util.Date.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbNotificacoes.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tbNotificacoes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        setLocation(0,0);
    }//GEN-LAST:event_formMouseClicked

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
        setLocation(0, -295);
        requestFocus(false);
    }//GEN-LAST:event_formMouseExited

    public static void preencherTable() {
        try {
            NotificacaoControl control = new NotificacaoControl();
            model = (DefaultTableModel) tbNotificacoes.getModel();
            Vector col;
            model.getDataVector().clear();
            java.util.List<Diarias> tabela = control.listar();
            if (tabela == null) {
                return;
            }
            for (Diarias diarias : tabela) {
                col = new Vector();
                col.add(diarias.getIdLocacao());
                col.add(diarias.getAtualizacao());
                col.add(diarias.getTotal());
                model.addRow(col);
            }
        } catch (NullPointerException ex) {
            Messages.showError("Erro de notificação.");
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTable tbNotificacoes;
    // End of variables declaration//GEN-END:variables
}
